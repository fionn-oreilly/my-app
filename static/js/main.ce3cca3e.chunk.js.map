{"version":3,"sources":["index.js"],"names":["Square","props","value","includes","disabled","alt-text","className","onClick","src","width","height","Game","state","player","computer","results","isGame","movesIsDisabled","gamePage","bind","loginPage","i","this","setState","move","Math","floor","random","result","split","handleClick","game","renderSquare","concat","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce3cca3e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n\tif (props.value.includes(\"Rock\")) {\n    return (\n      <button disabled={props.value.includes(\"true\")} alt-text=\"rock\" className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://goodday451999.github.io/Rock-Paper-Scissors-Neo/images/stone.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  } else if (props.value.includes(\"Paper\")) {\n     return (\n      <button disabled={props.value.includes(\"true\")} alt-text=\"paper\" className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/paper.png' width=\"100\" height=\"100\"/>}\n      </button>\n     );\n  } else if (props.value.includes(\"Scissors\")) {\n    return (\n      <button disabled={props.value.includes(\"true\")} alt-text=\"scissors\" className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/scissors.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  }\n}\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t  player: 0,\n      computer: 0,\n      results: [\"n_nothing\",\"nothing\"],\n\t  //isDisabled: false,\n      isGame : false,\n\t  movesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"false\"]\n    };\n\n    this.gamePage  = this.gamePage.bind(this);\n\tthis.loginPage  = this.loginPage.bind(this);\n  }\n  \n  \n  handleClick(i) {\n\tif(this.state.player === 10 || this.state.computer === 10) {\n\t\t  this.setState({\n\t\t\tmovesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"true\"]\n\t\t  });\n\t} else {\n\t\n    const moves = [\"Rock\", \"Paper\", \"Scissors\"];\n    const move = moves[Math.floor(Math.random() * Math.floor(3))];\n    const result = i + move;\n    \n    if (i.split(\"_\")[1] === move) {\n      this.setState({results: [i,move]})\n    }else if (result.includes('RockScissors') || result.includes('ScissorsPaper') || result.includes('PaperRock')) { // if it's the players turn\n      this.setState({\n        player: this.state.player+1,\n        results: [i,move],\n    });\n    } else { // if it's the computers turn\n      this.setState({\n        computer: this.state.computer+1,\n        results: [i,move],\n      });\n    }\n\t}\n\t\n\t\n  }\n  \n  renderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={i}\n\t\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n  \n  \n  loginPage() {\n    this.setState({\n\t\tisGame : false,\n    });\n  }\n  \n  gamePage() {\n\tthis.setState({\n\t\tisGame : true,\n    });\n  }\n  \n  render() {\n    const game = (\n       <div className=\"game\">\n        <div className=\"game-board\">\n          <div>\n\t\t\t<div>{\"Player score: \" + this.state.player}</div>\n\t\t\t<div>{\"Computer score: \" + this.state.computer}</div>\n\t\t\t<div>{\"You played \" + this.state.results[0].split(\"_\")[1] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[0]))}\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[1]))}\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[2]))}\n\t\t\t\t</div>\n\t\t\t</div>\n        </div>\n        <div>\n            <button onClick={this.loginPage} className=\"loginbutton\">Login</button>\n          </div>\n      </div>\n    );\n\t\n\tconst alt = (\n\t\t   <div className=\"game2\">\n\t\t   <div>\n            <button onClick={this.gamePage} className=\"loginbutton\">Play</button>\n          </div>\n\t\t  </div>\n\t\t);\n  \n    return (\n      <div>\n        { this.state.isGame ? game : alt }\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}