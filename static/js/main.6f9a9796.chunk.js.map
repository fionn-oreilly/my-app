{"version":3,"sources":["index.js"],"names":["GameButtons","props","value","includes","class","disabled","onClick","src","width","height","Game","state","playerScore","computerScore","results","currentPage","movesIsDisabled","username","pass","nameinput","passinput","gamePage","bind","loginPage","login","storeLogin","resetGame","registerPage","handleChange","handleSubmit","i","this","setState","move","Math","floor","random","result","split","handleClick","alert","event","name","target","game","renderButton","concat","checkWinner","register","type","placeholder","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f9a9796.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nfunction GameButtons(props) { // rock, paper, and scissor buttons\n\tif (props.value.includes(\"Rock\")) {\n    return (\n      <button class=\"btn btn-outline-primary mr-4\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://goodday451999.github.io/Rock-Paper-Scissors-Neo/images/stone.png' width=\"200\" height=\"200\"/>}\n      </button>\n    );\n  } else if (props.value.includes(\"Paper\")) {\n     return (\n      <button class=\"btn btn-outline-primary mr-4\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/paper.png' width=\"200\" height=\"200\"/>}\n      </button>\n     );\n  } else if (props.value.includes(\"Scissors\")) {\n    return (\n      <button class=\"btn btn-outline-primary\" disabled={props.value.includes(\"true\")} onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/scissors.png' width=\"200\" height=\"200\"/>}\n      </button>\n    );\n  }\n}\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t  playerScore: 0,\n      computerScore: 0,\n      results: [\"n_nothing\",\"nothing\"], // last move played by each player\n      currentPage : \"game\", // to control which page loads\n\t  movesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"false\"], // stores names for the buttons, and if the buttons are disabled\n\t  username: \"\", // registered username\n\t  pass: \"\", // registered password\n\t  nameinput: \"\", // username input by user to login\n\t  passinput: \"\" // password input by user to login\n    };\n\n    this.gamePage  = this.gamePage.bind(this);\n\tthis.loginPage  = this.loginPage.bind(this);\n\tthis.login  = this.login.bind(this);\n\tthis.storeLogin  = this.storeLogin.bind(this);\n\tthis.resetGame = this.resetGame.bind(this);\n\tthis.registerPage  = this.registerPage.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  \n  handleClick(i) { // handles the user clicking on rock, paper or scissor\n\tif(this.state.playerScore === 10 || this.state.computerScore === 10) { // disables buttons when a player reaches a score of 10\n\t\t  this.setState({\n\t\t\tmovesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"true\"]\n\t\t  });\n\t} else {\n\t\n    const moves = [\"Rock\", \"Paper\", \"Scissors\"];\n    const move = moves[Math.floor(Math.random() * Math.floor(3))]; // pick a random move for computers turn\n    const result = i + move;\n    \n    if (i.split(\"_\")[1] === move) { // in case of tie only update results to the latest move by player and computer\n      this.setState({results: [i,move]}) \n    }else if (result.includes('RockScissors') || result.includes('ScissorsPaper') || result.includes('PaperRock')) { // if it's the players turn\n      this.setState({\n        playerScore: this.state.playerScore+1, // increase player score if they won\n        results: [i,move],\n    });\n    } else { // if it's the computers turn\n      this.setState({\n        computerScore: this.state.computerScore+1, // increase computer score if they won\n        results: [i,move],\n      });\n    }\n\t}\n  }\n  \n  renderButton(i) { // creates rock paper, scissor buttons\n\t\treturn (\n\t\t\t<GameButtons\n\t\t\t\tvalue={i}\n\t\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n  \n  \n  loginPage() { // set current page to login page\n    this.setState({\n\t\tcurrentPage : \"login\",\n    });\n  }\n  \n  gamePage() { // set current page to game page\n\tthis.setState({\n\t\tcurrentPage : \"game\",\n    });\n  }\n  \n  registerPage() { // set current page to register page\n\tthis.setState({\n\t\tcurrentPage : \"register\",\n    });\n  }\n  \n  checkWinner() { // check if there's a winner and print the winner\n\t if(this.state.playerScore === 10) {\n\t\treturn(<div class=\"d-flex justify-content-center text-success font-weight-bold\">{\"You win!\"}</div>);\n\t} else if(this.state.computerScore === 10) {\n\t\treturn(<div class=\"d-flex justify-content-center text-danger font-weight-bold\">{\"Computer wins.\"}</div>);\n\t}\n  }\n  \n  resetGame() { // resets the game state\n\t  this.setState({\n\t\t  playerScore: 0,\n\t\t  computerScore: 0,\n\t\t  results: [\"n_nothing\",\"nothing\"],\n\t\tmovesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", \"false\"]\n\t\t  \n\t  });\n\treturn(<Game />);\n  }\n  \n  handleSubmit() { // handles user login details\n\t  this.setState({\n\t\t  currentPage: \"login\",\n\t  });\n\t alert(\"Account with username \\\"\"+ this.state.username +\"\\\" created.\");\n\t \n  }\n  \n  handleChange(event) { // updates vales for username and password on register\n\t  const name = event.target.name;\n\t  const value = event.target.value;\n\t  \n\t  this.setState({\n\t\t  [name]: value\n\t  });\n  }\n  \n  storeLogin(event) { // updates values for nameinput and passinput on login\n\t  const name = event.target.name;\n\t  const value = event.target.value;\n\t  \n\t  this.setState({\n\t\t  [name]: value\n\t  });\n  }\n  \n  login() { // checks the login details match the register details\n\t\talert(this.state.username + this.state.nameinput + this.state.pass + this.state.passinput);\n\t  if (this.state.username === this.state.nameinput && this.state.pass === this.state.passinput) {\n\t\t  this.setState({\n\t\t\tcurrentPage: \"game\"\n\t\t});\n\t  } else {\n\t\t  alert(\"Username and password combination incorrect\");\n\t  }\n  }\n  \n  render() {\n    const game = ( // contetns for game page\n\t<div class=\"d-flex justify-content-center\">\n       <div>\n\t   <div class=\"d-flex justify-content-center mt-4\">\n\t\t<h2 class=\"text-primary\">Rock Paper Scissors!</h2></div>\n\t\t<div class=\"d-flex justify-content-center mt-2\"><h4 class=\"text-primary\">Game Page</h4></div>\n        <div>\n\t\t<div class=\"d-flex justify-content-center mt-4\">\n\t\t\t\t  {this.renderButton(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[0]))}\n\t\t\t\t  {this.renderButton(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[1]))}\n\t\t\t\t  {this.renderButton(this.state.movesIsDisabled[3].concat(\"_\",this.state.movesIsDisabled[2]))}\n\t\t</div>\n          <div>\n\t\t\t<div class=\"d-flex justify-content-center mt-4\">{\"You played \" + this.state.results[0].split(\"_\")[1] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n\t\t\t<div class=\"d-flex justify-content-center mt-2\">{\"Computer score: \" + this.state.computerScore}</div>\n\t\t\t<div class=\"d-flex justify-content-center mt-2\">{\"Player score: \" + this.state.playerScore}</div>\n\t\t\t\t{this.checkWinner()}\n\t\t\t</div>\n        </div>\n        <div class=\"d-flex justify-content-center mt-4\">\n\t\t\t<button class=\"btn btn-outline-dark\" onClick={this.registerPage}>Register</button>\n            <button class=\"btn btn-outline-dark\" onClick={this.loginPage}>Login</button>\n\t\t\t<button class=\"btn btn-primary\" onClick={this.resetGame}>Reset Game</button>\n          </div>\n      </div>\n\t  </div>\n    );\n\t\n\tconst register = ( // contents for register page\n\t<div>\n\t\t   <div class=\"d-flex justify-content-center mt-5\">\n\t\t   <div>\n\t\t   <div class=\"d-flex justify-content-center mt-4\">\n\t\t\t\t<h2 class=\"text-primary\">Rock Paper Scissors!</h2></div>\n\t\t\t\t<div class=\"d-flex justify-content-center mt-2\"><h4 class=\"text-primary\">Register Page</h4></div>\n\t\t\t<form>\n\t\t\t<div class=\"form-group mt-4\">\n\t\t\t\t<label>\n\t\t\t\t\tUsername:\n\t\t\t\t\t<input name=\"username\" class=\"form-control\" type=\"text\" placeholder=\"username\" onChange={this.handleChange} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>\n\t\t\t\t\tPassword:\n\t\t\t\t\t<input class=\"form-control\" name=\"pass\" type=\"password\" placeholder=\"password\" onChange={this.handleChange} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onClick={this.handleSubmit}>Register</button>\n\t\t\t\t<button type=\"button\" class=\"btn btn-outline-dark\" onClick={this.gamePage}>Play</button>\n\n\t\t\t</div>\n      </form>\n\t  </div>\n\t  </div>\n\t\t  \n\t\t  </div>\n\t\t);\n\t\t\n\tconst login = ( // contents for login page\n\t<div>\n\t\t   <div class=\"d-flex justify-content-center mt-4\">\n\t\t\t<div>\n\t\t   \t\t   <div class=\"d-flex justify-content-center mt-4\">\n\t\t\t\t   <h2 class=\"text-primary\">Rock Paper Scissors!</h2></div>\n\t\t\t\t   <div class=\"d-flex justify-content-center mt-2\"><h4 class=\"text-primary\">Login Page</h4></div>\n\n\t\t\t<form>\n\t\t\t<div class=\"form-group mt-4\">\n\t\t\t\t<label>\n\t\t\t\t\tUsername:\n\t\t\t\t\t<input name=\"nameinput\" class=\"form-control\" type=\"text\" placeholder=\"username\" onChange={this.storeLogin} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label>\n\t\t\t\t\tPassword:\n\t\t\t\t\t<input name=\"passinput\" class=\"form-control\" type=\"password\" placeholder=\"password\" onChange={this.storeLogin} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" value=\"Login\" onClick={this.login}>Login</button>\n\t\t\t\t<button type=\"button\" class=\"btn btn-outline-dark\" onClick={this.gamePage}>Play</button>\n\t\t\t</div>\n      </form>\n\t  </div>\n\t  </div>\n\t\t  </div>\n\t\t);\n  \n\tif(this.state.currentPage === \"login\") {\n\t\treturn(login);\n\t} else if(this.state.currentPage === \"register\") {\n\t\treturn(register);\n\t} else if (this.state.currentPage === \"game\") {\n\t\treturn(game);\n\t}\n  }\n}\n\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}