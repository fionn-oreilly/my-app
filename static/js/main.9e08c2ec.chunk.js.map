{"version":3,"sources":["index.js"],"names":["Square","props","value","disabled","className","onClick","src","width","height","Game","state","player","computer","results","isDisabled","isGame","movesIsDisabled","enableGamePage","bind","switchPage","i","move","Math","floor","random","result","this","setState","handleClick","game","renderSquare","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAMA,SAASA,EAAOC,GACf,MAAsB,QAAlBA,EAAMC,MAAM,GAEX,wBAAQC,SAAUF,EAAMC,MAAM,GAAIE,UAAU,SAASC,QAASJ,EAAMI,QAApE,SACG,qBAAKC,IAAM,2EAA2EC,MAAM,MAAMC,OAAO,UAGnF,SAAlBP,EAAMC,MAAM,GAEnB,wBAAQC,SAAUF,EAAMC,MAAM,GAAIE,UAAU,SAASC,QAASJ,EAAMI,QAApE,SACG,qBAAKC,IAAM,wDAAwDC,MAAM,MAAMC,OAAO,UAGhE,YAAlBP,EAAMC,MAAM,GAEnB,wBAAQC,SAAUF,EAAMC,MAAM,GAAIE,UAAU,SAASC,QAASJ,EAAMI,QAApE,SACG,qBAAKC,IAAM,2DAA2DC,MAAM,MAAMC,OAAO,eAHzF,E,IAUHC,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,MAAQ,CACdC,OAAQ,EACLC,SAAU,EACVC,QAAS,CAAC,UAAU,WACvBC,YAAY,EACTC,QAAS,EACZC,gBAAiB,CAAC,OAAQ,QAAS,YAAY,IAG9C,EAAKC,eAAkB,EAAKA,eAAeC,KAApB,gBAC1B,EAAKC,WAAc,EAAKA,WAAWD,KAAhB,gBAbC,E,wDAgBPE,GACV,IACMC,EADQ,CAAC,OAAQ,QAAS,YACbC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KACnDE,EAASL,EAAIC,EAEfD,GAAKC,EACPK,KAAKC,SAAS,CAACd,QAAS,CAACO,EAAEC,KACR,gBAAVI,GAAqC,iBAATA,GAAsC,aAAVA,EACjEC,KAAKC,SAAS,CACZhB,OAAQe,KAAKhB,MAAMC,OAAO,EAC1BE,QAAS,CAACO,EAAEC,KAGdK,KAAKC,SAAS,CACZf,SAAUc,KAAKhB,MAAME,SAAS,EAC9BC,QAAS,CAACO,EAAEC,O,mCAKLD,GAAI,IAAD,OACd,OACE,cAACpB,EAAD,CACEE,MAAOkB,EACPf,QAAS,kBAAM,EAAKuB,YAAYR,Q,uCAOpCM,KAAKC,SAAS,CAChBZ,QAAS,M,mCAKVW,KAAKC,SAAS,CACbZ,QAAS,M,+BAKP,IAAMc,EACH,sBAAKzB,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACE,gCACP,8BAAM,iBAAmBsB,KAAKhB,MAAMC,SACpC,8BAAM,mBAAqBe,KAAKhB,MAAME,WACtC,8BAAM,cAAgBc,KAAKhB,MAAMG,QAAQ,GAAK,qBAAuBa,KAAKhB,MAAMG,QAAQ,GAAK,MAC5F,sBAAKT,UAAU,YAAf,UACGsB,KAAKI,aAAaJ,KAAKhB,MAAMM,iBAC7BU,KAAKI,aAAaJ,KAAKhB,MAAMM,iBAC7BU,KAAKI,aAAaJ,KAAKhB,MAAMM,yBAI5B,sBAAKZ,UAAU,YAAf,UACE,wBACA,0BAEF,8BACI,wBAAQC,QAASqB,KAAKT,eAAgBb,UAAU,cAAhD,uBAKL2B,EACF,qBAAK3B,UAAU,QAAf,SACA,8BACO,wBAAQC,QAASqB,KAAKP,WAAYf,UAAU,cAA5C,sBAKR,OACE,8BACIsB,KAAKhB,MAAMK,OAASc,EAAOE,Q,GA9FlBC,IAAMC,WAsGzBC,IAASC,OACP,cAAC1B,EAAD,IACA2B,SAASC,eAAe,W","file":"static/js/main.9e08c2ec.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n\tif (props.value[0] == \"Rock\") {\n    return (\n      <button disabled={props.value[3]} className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://goodday451999.github.io/Rock-Paper-Scissors-Neo/images/stone.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  } else if (props.value[1] == \"Paper\") {\n     return (\n      <button disabled={props.value[3]} className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/paper.png' width=\"100\" height=\"100\"/>}\n      </button>\n     );\n  } else if (props.value[2] == \"Scissors\") {\n    return (\n      <button disabled={props.value[3]} className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/scissors.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  }\n}\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t  player: 0,\n      computer: 0,\n      results: [\"nothing\",\"nothing\"],\n\t  isDisabled: false,\n      isGame : true,\n\t  movesIsDisabled: [\"Rock\", \"Paper\", \"Scissors\", true]\n    };\n\n    this.enableGamePage  = this.enableGamePage.bind(this);\n\tthis.switchPage  = this.switchPage.bind(this);\n  }\n  \n  handleClick(i) {\n    const moves = [\"Rock\", \"Paper\", \"Scissors\"];\n    const move = moves[Math.floor(Math.random() * Math.floor(3))];\n    const result = i + move;\n    \n    if (i == move) {\n      this.setState({results: [i,move]})\n    }else if ((result == 'RockScissors' || result =='ScissorsPaper' || result == 'PaperRock')) { // if it's the players turn\n      this.setState({\n        player: this.state.player+1,\n        results: [i,move],\n    });\n    } else { // if it's the computers turn\n      this.setState({\n        computer: this.state.computer+1,\n        results: [i,move],\n      });\n    }\n  }\n  \n  renderSquare(i) {\n    return (\n      <Square\n        value={i}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n  \n  \n  enableGamePage() {\n    this.setState({\n\t\tisGame : false,\n    });\n  }\n  \n  switchPage() {\n\tthis.setState({\n\t\tisGame : true,\n    });\n  }\n  \n  render() {\n    const game = (\n       <div className=\"game\">\n        <div className=\"game-board\">\n          <div>\n\t\t\t<div>{\"Player score: \" + this.state.player}</div>\n\t\t\t<div>{\"Computer score: \" + this.state.computer}</div>\n\t\t\t<div>{\"You played \" + this.state.results[0] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled)}\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled)}\n\t\t\t\t  {this.renderSquare(this.state.movesIsDisabled)}\n\t\t\t\t</div>\n\t\t\t</div>\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n        <div>\n            <button onClick={this.enableGamePage} className=\"loginbutton\">Next</button>\n          </div>\n      </div>\n    );\n\t\n\tconst alt = (\n\t\t   <div className=\"game2\">\n\t\t   <div>\n            <button onClick={this.switchPage} className=\"loginbutton\">Next</button>\n          </div>\n\t\t  </div>\n\t\t);\n    \n    return (\n      <div>\n        { this.state.isGame ? game : alt }\n      </div>\n    );\n  }\n}\n\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}