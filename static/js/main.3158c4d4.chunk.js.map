{"version":3,"sources":["index.js"],"names":["Square","props","value","className","onClick","src","width","height","Board","state","player","computer","results","isDisabled","enableGamePage","bind","switchPage","i","move","Math","floor","random","result","this","setState","handleClick","renderSquare","React","Component","Game","isGame","game","alt","ReactDOM","render","document","getElementById"],"mappings":"sNAMA,SAASA,EAAOC,GACd,MAAmB,QAAfA,EAAMC,MAEN,wBAA6CC,UAAU,SAASC,QAASH,EAAMG,QAA/E,SACG,qBAAKC,IAAM,2EAA2EC,MAAM,MAAMC,OAAO,UAGtF,SAAfN,EAAMC,MAEb,wBAA6CC,UAAU,SAASC,QAASH,EAAMG,QAA/E,SACG,qBAAKC,IAAM,wDAAwDC,MAAM,MAAMC,OAAO,UAGnE,YAAfN,EAAMC,MAEb,wBAA6CC,UAAU,SAASC,QAASH,EAAMG,QAA/E,SACG,qBAAKC,IAAM,2DAA2DC,MAAM,MAAMC,OAAO,eAHzF,E,IAyBHC,E,kDACJ,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXC,OAAQ,EACRC,SAAU,EACVC,QAAS,CAAC,UAAU,WACvBC,YAAY,GAIX,EAAKC,eAAkB,EAAKA,eAAeC,KAApB,gBAC1B,EAAKC,WAAc,EAAKA,WAAWD,KAAhB,gBAXC,E,wDAcPE,GACV,IACMC,EADQ,CAAC,OAAQ,QAAS,YACbC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KACnDE,EAASL,EAAIC,EAEfD,GAAKC,EACPK,KAAKC,SAAS,CAACZ,QAAS,CAACK,EAAEC,KACR,gBAAVI,GAAqC,iBAATA,GAAsC,aAAVA,EACjEC,KAAKC,SAAS,CACZd,OAAQa,KAAKd,MAAMC,OAAO,EAC1BE,QAAS,CAACK,EAAEC,KAGdK,KAAKC,SAAS,CACZb,SAAUY,KAAKd,MAAME,SAAS,EAC9BC,QAAS,CAACK,EAAEC,O,mCAKLD,GAAI,IAAD,OACd,OACE,cAACjB,EAAD,CACEE,MAAOe,EACPb,QAAS,kBAAM,EAAKqB,YAAYR,Q,+BA4BpC,OACE,gCACE,8BAAM,iBAAmBM,KAAKd,MAAMC,SACpC,8BAAM,mBAAqBa,KAAKd,MAAME,WACtC,8BAAM,cAAgBY,KAAKd,MAAMG,QAAQ,GAAK,qBAAuBW,KAAKd,MAAMG,QAAQ,GAAK,MAC7F,sBAAKT,UAAU,YAAf,UACGoB,KAAKG,aAAa,QAClBH,KAAKG,aAAa,SAClBH,KAAKG,aAAa,sB,GA3ETC,IAAMC,WA2HpBC,E,kDACJ,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAEDQ,MAAQ,CACXqB,QAAS,GAGX,EAAKhB,eAAkB,EAAKA,eAAeC,KAApB,gBAC1B,EAAKC,WAAc,EAAKA,WAAWD,KAAhB,gBARC,E,6DAajBQ,KAAKC,SAAS,CAChBM,QAAS,M,mCAKVP,KAAKC,SAAS,CACbM,QAAS,M,+BAKP,IAAMC,EACH,sBAAK5B,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACE,cAACK,EAAD,MAEF,sBAAKL,UAAU,YAAf,UACE,wBACA,0BAEF,8BACI,wBAAQC,QAASmB,KAAKT,eAAgBX,UAAU,cAAhD,uBAKL6B,EACF,qBAAK7B,UAAU,QAAf,SACA,8BACO,wBAAQC,QAASmB,KAAKP,WAAYb,UAAU,cAA5C,sBAKR,OACE,8BACIoB,KAAKd,MAAMqB,OAASC,EAAOC,Q,GAnDlBL,IAAMC,WAmEzBK,IAASC,OACP,cAACL,EAAD,IACAM,SAASC,eAAe,W","file":"static/js/main.3158c4d4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n  if (props.value == \"Rock\") {\n    return (\n      <button /*disabled={this.state.isDisabled}*/ className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://goodday451999.github.io/Rock-Paper-Scissors-Neo/images/stone.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  } else if (props.value == \"Paper\") {\n     return (\n      <button /*disabled={this.state.isDisabled}*/ className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/paper.png' width=\"100\" height=\"100\"/>}\n      </button>\n     );\n  } else if (props.value == \"Scissors\") {\n    return (\n      <button /*disabled={this.state.isDisabled}*/ className=\"square\" onClick={props.onClick}>\n        {<img src = 'https://hacktoberfest.lingonsaft.com/images/scissors.png' width=\"100\" height=\"100\"/>}\n      </button>\n    );\n  }\n}\n\n/*function makeBoard() {\n\treturn (\n      <div>\n        <div>{\"Player score: \" + this.state.player}</div>\n        <div>{\"Computer score: \" + this.state.computer}</div>\n        <div>{\"You played \" + this.state.results[0] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(\"Rock\")}\n          {this.renderSquare(\"Paper\")}\n          {this.renderSquare(\"Scissors\")}\n        </div>\n        \n      </div>\n    );\n}*/\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: 0,\n      computer: 0,\n      results: [\"nothing\",\"nothing\"],\n\t  isDisabled: true,\n\t  //isGame : true,\n    };\n\t\n    this.enableGamePage  = this.enableGamePage.bind(this);\n\tthis.switchPage  = this.switchPage.bind(this);\n  }\n\n  handleClick(i) {\n    const moves = [\"Rock\", \"Paper\", \"Scissors\"];\n    const move = moves[Math.floor(Math.random() * Math.floor(3))];\n    const result = i + move;\n    \n    if (i == move) {\n      this.setState({results: [i,move]})\n    }else if ((result == 'RockScissors' || result =='ScissorsPaper' || result == 'PaperRock')) { // if it's the players turn\n      this.setState({\n        player: this.state.player+1,\n        results: [i,move],\n    });\n    } else { // if it's the computers turn\n      this.setState({\n        computer: this.state.computer+1,\n        results: [i,move],\n      });\n    }\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={i}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n  \n  /*renderBoard() {\n\t  return ( <makeBoard /> );\n  }\n  \n  renderBoard() {\n\t   return (\n      <div>\n        <div>{\"Player score: \" + this.state.player}</div>\n        <div>{\"Computer score: \" + this.state.computer}</div>\n        <div>{\"You played \" + this.state.results[0] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(\"Rock\")}\n          {this.renderSquare(\"Paper\")}\n          {this.renderSquare(\"Scissors\")}\n        </div>\n        \n      </div>\n    );\n  }*/\n\n  render() {\n    //const status = 'Next player: ' + (this.state.playerIsNext ? 'Player' : 'Computer');\n\n    return (\n      <div>\n        <div>{\"Player score: \" + this.state.player}</div>\n        <div>{\"Computer score: \" + this.state.computer}</div>\n        <div>{\"You played \" + this.state.results[0] + \". Computer played \" + this.state.results[1] + \".\"}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(\"Rock\")}\n          {this.renderSquare(\"Paper\")}\n          {this.renderSquare(\"Scissors\")}\n        </div>\n      </div>\n    );\n  }\n  \n  /*enableGamePage() {\n    this.setState({\n      isGame : false,\n    });\n  }\n  \n  switchPage() {\n\t  this.setState({\n\t\tisGame : true,\n    });\n  }\n  \n  render() {\n    const game = (\n      <div className=\"game\">\n\t  <div className=\"gameBoard\">\n\t  {this.renderBoard()}\n        </div>\n        <div>\n            <button onClick={this.enableGamePage} className=\"loginbutton\">Next</button>\n          </div>\n      </div>\n    );\n\t\n\tconst alt = (\n\t\t   <div className=\"game2\">\n\t\t   <div>\n            <button onClick={this.switchPage} className=\"loginbutton\">Next</button>\n          </div>\n\t\t  </div>\n\t\t);\n    \n    return (\n      <div>\n        { this.state.isGame ? game : alt }\n      </div>\n    );\n  }*/\n  \n  \n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isGame : true,\n    };\n\n    this.enableGamePage  = this.enableGamePage.bind(this);\n\tthis.switchPage  = this.switchPage.bind(this);\n  }\n  \n  \n  enableGamePage() {\n    this.setState({\n\t\tisGame : false,\n    });\n  }\n  \n  switchPage() {\n\tthis.setState({\n\t\tisGame : true,\n    });\n  }\n  \n  render() {\n    const game = (\n       <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n        <div>\n            <button onClick={this.enableGamePage} className=\"loginbutton\">Next</button>\n          </div>\n      </div>\n    );\n\t\n\tconst alt = (\n\t\t   <div className=\"game2\">\n\t\t   <div>\n            <button onClick={this.switchPage} className=\"loginbutton\">Next</button>\n          </div>\n\t\t  </div>\n\t\t);\n    \n    return (\n      <div>\n        { this.state.isGame ? game : alt }\n      </div>\n    );\n  }\n}\n\n/*class Game2 extends React.Component {\n  render() {\n     (\n      <div className=\"game\">\n        {\"hi\"}\n      </div>\n    );\n  }\n}*/\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}